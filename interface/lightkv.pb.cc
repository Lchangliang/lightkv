// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lightkv.proto

#include "lightkv.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_lightkv_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_lightkv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_lightkv_2eproto
namespace lightkv {
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class LightKVRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightKVRequest>
      _instance;
} _LightKVRequest_default_instance_;
class LightKVResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightKVResponse>
      _instance;
} _LightKVResponse_default_instance_;
class DeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest>
      _instance;
} _DeleteRequest_default_instance_;
class DeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteResponse>
      _instance;
} _DeleteResponse_default_instance_;
class InsertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertRequest>
      _instance;
} _InsertRequest_default_instance_;
class InsertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertResponse>
      _instance;
} _InsertResponse_default_instance_;
class SelectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectRequest>
      _instance;
} _SelectRequest_default_instance_;
class SelectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectResponse>
      _instance;
} _SelectResponse_default_instance_;
}  // namespace lightkv
namespace protobuf_lightkv_2eproto {
static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_Error_default_instance_;
    new (ptr) ::lightkv::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsError}, {}};

static void InitDefaultsLightKVRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_LightKVRequest_default_instance_;
    new (ptr) ::lightkv::LightKVRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::LightKVRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LightKVRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLightKVRequest}, {}};

static void InitDefaultsLightKVResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_LightKVResponse_default_instance_;
    new (ptr) ::lightkv::LightKVResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::LightKVResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LightKVResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLightKVResponse}, {
      &protobuf_lightkv_2eproto::scc_info_Error.base,}};

static void InitDefaultsDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_DeleteRequest_default_instance_;
    new (ptr) ::lightkv::DeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::DeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRequest}, {}};

static void InitDefaultsDeleteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_DeleteResponse_default_instance_;
    new (ptr) ::lightkv::DeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::DeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteResponse}, {
      &protobuf_lightkv_2eproto::scc_info_Error.base,}};

static void InitDefaultsInsertRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_InsertRequest_default_instance_;
    new (ptr) ::lightkv::InsertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::InsertRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInsertRequest}, {}};

static void InitDefaultsInsertResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_InsertResponse_default_instance_;
    new (ptr) ::lightkv::InsertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::InsertResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInsertResponse}, {
      &protobuf_lightkv_2eproto::scc_info_Error.base,}};

static void InitDefaultsSelectRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_SelectRequest_default_instance_;
    new (ptr) ::lightkv::SelectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::SelectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SelectRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSelectRequest}, {}};

static void InitDefaultsSelectResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lightkv::_SelectResponse_default_instance_;
    new (ptr) ::lightkv::SelectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightkv::SelectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SelectResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSelectResponse}, {
      &protobuf_lightkv_2eproto::scc_info_Error.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightKVRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightKVResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SelectRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SelectResponse.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::Error, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::Error, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, operator_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, select_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, lkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, rkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVResponse, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::LightKVResponse, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::DeleteRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::DeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::DeleteResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::DeleteResponse, redirect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::InsertResponse, redirect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectRequest, lkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectRequest, rkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectResponse, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectResponse, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightkv::SelectResponse, values_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::lightkv::Error)},
  { 7, -1, sizeof(::lightkv::LightKVRequest)},
  { 17, -1, sizeof(::lightkv::LightKVResponse)},
  { 26, -1, sizeof(::lightkv::DeleteRequest)},
  { 32, -1, sizeof(::lightkv::DeleteResponse)},
  { 39, -1, sizeof(::lightkv::InsertRequest)},
  { 46, -1, sizeof(::lightkv::InsertResponse)},
  { 53, -1, sizeof(::lightkv::SelectRequest)},
  { 61, -1, sizeof(::lightkv::SelectResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_LightKVRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_LightKVResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_DeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_InsertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_InsertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_SelectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightkv::_SelectResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "lightkv.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rlightkv.proto\022\007lightkv\"2\n\005Error\022\022\n\nerr"
      "or_code\030\001 \001(\005\022\025\n\rerror_message\030\002 \001(\t\"\223\001\n"
      "\016LightKVRequest\022,\n\roperator_type\030\001 \001(\0162\025"
      ".lightkv.OperatorType\022(\n\013select_type\030\002 \001"
      "(\0162\023.lightkv.SelectType\022\014\n\004lkey\030\003 \001(\t\022\014\n"
      "\004rkey\030\004 \001(\t\022\r\n\005value\030\005 \001(\t\"`\n\017LightKVRes"
      "ponse\022\035\n\005error\030\001 \001(\0132\016.lightkv.Error\022\020\n\010"
      "redirect\030\002 \001(\t\022\014\n\004keys\030\003 \003(\t\022\016\n\006values\030\004"
      " \003(\t\"\034\n\rDeleteRequest\022\013\n\003key\030\001 \001(\t\"A\n\016De"
      "leteResponse\022\035\n\005error\030\001 \001(\0132\016.lightkv.Er"
      "ror\022\020\n\010redirect\030\002 \001(\t\"+\n\rInsertRequest\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"A\n\016InsertResp"
      "onse\022\035\n\005error\030\001 \001(\0132\016.lightkv.Error\022\020\n\010r"
      "edirect\030\002 \001(\t\"N\n\rSelectRequest\022!\n\004type\030\001"
      " \001(\0162\023.lightkv.SelectType\022\014\n\004lkey\030\002 \001(\t\022"
      "\014\n\004rkey\030\003 \001(\t\"_\n\016SelectResponse\022\035\n\005error"
      "\030\001 \001(\0132\016.lightkv.Error\022\020\n\010redirect\030\002 \001(\t"
      "\022\014\n\004keys\030\003 \003(\t\022\016\n\006values\030\004 \003(\t*2\n\014Operat"
      "orType\022\n\n\006SELECT\020\000\022\n\n\006INSERT\020\001\022\n\n\006DELETE"
      "\020\002*/\n\nSelectType\022\n\n\006SINGLE\020\000\022\n\n\006PREFIX\020\001"
      "\022\t\n\005RANGE\020\0022N\n\016StorageService\022<\n\007operate"
      "\022\027.lightkv.LightKVRequest\032\030.lightkv.Ligh"
      "tKVResponse2\300\001\n\014ProxyService\0229\n\006insert\022\026"
      ".lightkv.InsertRequest\032\027.lightkv.InsertR"
      "esponse\0229\n\006select\022\026.lightkv.SelectReques"
      "t\032\027.lightkv.SelectResponse\022:\n\007delete_\022\026."
      "lightkv.DeleteRequest\032\027.lightkv.DeleteRe"
      "sponseB\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1099);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lightkv.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_lightkv_2eproto
namespace lightkv {
const ::google::protobuf::EnumDescriptor* OperatorType_descriptor() {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightkv_2eproto::file_level_enum_descriptors[0];
}
bool OperatorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SelectType_descriptor() {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightkv_2eproto::file_level_enum_descriptors[1];
}
bool SelectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kErrorCodeFieldNumber;
const int Error::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:lightkv.Error)
}

void Error::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:lightkv.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.Error.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.Error.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.Error.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightKVRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightKVRequest::kOperatorTypeFieldNumber;
const int LightKVRequest::kSelectTypeFieldNumber;
const int LightKVRequest::kLkeyFieldNumber;
const int LightKVRequest::kRkeyFieldNumber;
const int LightKVRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightKVRequest::LightKVRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_LightKVRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.LightKVRequest)
}
LightKVRequest::LightKVRequest(const LightKVRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lkey().size() > 0) {
    lkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lkey_);
  }
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rkey().size() > 0) {
    rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&operator_type_, &from.operator_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&select_type_) -
    reinterpret_cast<char*>(&operator_type_)) + sizeof(select_type_));
  // @@protoc_insertion_point(copy_constructor:lightkv.LightKVRequest)
}

void LightKVRequest::SharedCtor() {
  lkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operator_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&select_type_) -
      reinterpret_cast<char*>(&operator_type_)) + sizeof(select_type_));
}

LightKVRequest::~LightKVRequest() {
  // @@protoc_insertion_point(destructor:lightkv.LightKVRequest)
  SharedDtor();
}

void LightKVRequest::SharedDtor() {
  lkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LightKVRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightKVRequest::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightKVRequest& LightKVRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_LightKVRequest.base);
  return *internal_default_instance();
}


void LightKVRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.LightKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operator_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&select_type_) -
      reinterpret_cast<char*>(&operator_type_)) + sizeof(select_type_));
  _internal_metadata_.Clear();
}

bool LightKVRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.LightKVRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.OperatorType operator_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operator_type(static_cast< ::lightkv::OperatorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lightkv.SelectType select_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_select_type(static_cast< ::lightkv::SelectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lkey().data(), static_cast<int>(this->lkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVRequest.lkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rkey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rkey().data(), static_cast<int>(this->rkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVRequest.rkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.LightKVRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.LightKVRequest)
  return false;
#undef DO_
}

void LightKVRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.LightKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.OperatorType operator_type = 1;
  if (this->operator_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operator_type(), output);
  }

  // .lightkv.SelectType select_type = 2;
  if (this->select_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->select_type(), output);
  }

  // string lkey = 3;
  if (this->lkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lkey().data(), static_cast<int>(this->lkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.lkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lkey(), output);
  }

  // string rkey = 4;
  if (this->rkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rkey().data(), static_cast<int>(this->rkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rkey(), output);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.LightKVRequest)
}

::google::protobuf::uint8* LightKVRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.LightKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.OperatorType operator_type = 1;
  if (this->operator_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operator_type(), target);
  }

  // .lightkv.SelectType select_type = 2;
  if (this->select_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->select_type(), target);
  }

  // string lkey = 3;
  if (this->lkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lkey().data(), static_cast<int>(this->lkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.lkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lkey(), target);
  }

  // string rkey = 4;
  if (this->rkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rkey().data(), static_cast<int>(this->rkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rkey(), target);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.LightKVRequest)
  return target;
}

size_t LightKVRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.LightKVRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lkey = 3;
  if (this->lkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lkey());
  }

  // string rkey = 4;
  if (this->rkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  // string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .lightkv.OperatorType operator_type = 1;
  if (this->operator_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operator_type());
  }

  // .lightkv.SelectType select_type = 2;
  if (this->select_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->select_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightKVRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.LightKVRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LightKVRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightKVRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.LightKVRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.LightKVRequest)
    MergeFrom(*source);
  }
}

void LightKVRequest::MergeFrom(const LightKVRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.LightKVRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lkey().size() > 0) {

    lkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lkey_);
  }
  if (from.rkey().size() > 0) {

    rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.operator_type() != 0) {
    set_operator_type(from.operator_type());
  }
  if (from.select_type() != 0) {
    set_select_type(from.select_type());
  }
}

void LightKVRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.LightKVRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightKVRequest::CopyFrom(const LightKVRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.LightKVRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightKVRequest::IsInitialized() const {
  return true;
}

void LightKVRequest::Swap(LightKVRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightKVRequest::InternalSwap(LightKVRequest* other) {
  using std::swap;
  lkey_.Swap(&other->lkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rkey_.Swap(&other->rkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operator_type_, other->operator_type_);
  swap(select_type_, other->select_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightKVRequest::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightKVResponse::InitAsDefaultInstance() {
  ::lightkv::_LightKVResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::lightkv::Error*>(
      ::lightkv::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightKVResponse::kErrorFieldNumber;
const int LightKVResponse::kRedirectFieldNumber;
const int LightKVResponse::kKeysFieldNumber;
const int LightKVResponse::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightKVResponse::LightKVResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_LightKVResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.LightKVResponse)
}
LightKVResponse::LightKVResponse(const LightKVResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redirect().size() > 0) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    error_ = new ::lightkv::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.LightKVResponse)
}

void LightKVResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

LightKVResponse::~LightKVResponse() {
  // @@protoc_insertion_point(destructor:lightkv.LightKVResponse)
  SharedDtor();
}

void LightKVResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void LightKVResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightKVResponse::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightKVResponse& LightKVResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_LightKVResponse.base);
  return *internal_default_instance();
}


void LightKVResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.LightKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  values_.Clear();
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool LightKVResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.LightKVResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVResponse.redirect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVResponse.keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.LightKVResponse.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.LightKVResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.LightKVResponse)
  return false;
#undef DO_
}

void LightKVResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.LightKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // repeated string keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->keys(i), output);
  }

  // repeated string values = 4;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.LightKVResponse)
}

::google::protobuf::uint8* LightKVResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.LightKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // repeated string keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->keys(i), target);
  }

  // repeated string values = 4;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.LightKVResponse.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.LightKVResponse)
  return target;
}

size_t LightKVResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.LightKVResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  // repeated string values = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightKVResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.LightKVResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LightKVResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightKVResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.LightKVResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.LightKVResponse)
    MergeFrom(*source);
  }
}

void LightKVResponse::MergeFrom(const LightKVResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.LightKVResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  values_.MergeFrom(from.values_);
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    mutable_error()->::lightkv::Error::MergeFrom(from.error());
  }
}

void LightKVResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.LightKVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightKVResponse::CopyFrom(const LightKVResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.LightKVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightKVResponse::IsInitialized() const {
  return true;
}

void LightKVResponse::Swap(LightKVResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightKVResponse::InternalSwap(LightKVResponse* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  values_.InternalSwap(CastToBase(&other->values_));
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightKVResponse::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_DeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:lightkv.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRequest& DeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_DeleteRequest.base);
  return *internal_default_instance();
}


void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.DeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.DeleteRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.DeleteRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.DeleteRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.DeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteResponse::InitAsDefaultInstance() {
  ::lightkv::_DeleteResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::lightkv::Error*>(
      ::lightkv::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResponse::kErrorFieldNumber;
const int DeleteResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResponse::DeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_DeleteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.DeleteResponse)
}
DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redirect().size() > 0) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    error_ = new ::lightkv::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.DeleteResponse)
}

void DeleteResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:lightkv.DeleteResponse)
  SharedDtor();
}

void DeleteResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void DeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteResponse::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResponse& DeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_DeleteResponse.base);
  return *internal_default_instance();
}


void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.DeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.DeleteResponse.redirect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.DeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.DeleteResponse)
  return false;
#undef DO_
}

void DeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.DeleteResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.DeleteResponse)
}

::google::protobuf::uint8* DeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.DeleteResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.DeleteResponse)
  return target;
}

size_t DeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.DeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string redirect = 2;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.DeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.DeleteResponse)
    MergeFrom(*source);
  }
}

void DeleteResponse::MergeFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    mutable_error()->::lightkv::Error::MergeFrom(from.error());
  }
}

void DeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {
  return true;
}

void DeleteResponse::Swap(DeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResponse::InternalSwap(DeleteResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteResponse::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertRequest::kKeyFieldNumber;
const int InsertRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertRequest::InsertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_InsertRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.InsertRequest)
}
InsertRequest::InsertRequest(const InsertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.InsertRequest)
}

void InsertRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InsertRequest::~InsertRequest() {
  // @@protoc_insertion_point(destructor:lightkv.InsertRequest)
  SharedDtor();
}

void InsertRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertRequest::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertRequest& InsertRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_InsertRequest.base);
  return *internal_default_instance();
}


void InsertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InsertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.InsertRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.InsertRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.InsertRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.InsertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.InsertRequest)
  return false;
#undef DO_
}

void InsertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.InsertRequest)
}

::google::protobuf::uint8* InsertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.InsertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.InsertRequest)
  return target;
}

size_t InsertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.InsertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.InsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.InsertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.InsertRequest)
    MergeFrom(*source);
  }
}

void InsertRequest::MergeFrom(const InsertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.InsertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void InsertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.InsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertRequest::CopyFrom(const InsertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.InsertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertRequest::IsInitialized() const {
  return true;
}

void InsertRequest::Swap(InsertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertRequest::InternalSwap(InsertRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertRequest::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertResponse::InitAsDefaultInstance() {
  ::lightkv::_InsertResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::lightkv::Error*>(
      ::lightkv::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertResponse::kErrorFieldNumber;
const int InsertResponse::kRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertResponse::InsertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_InsertResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.InsertResponse)
}
InsertResponse::InsertResponse(const InsertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redirect().size() > 0) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    error_ = new ::lightkv::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.InsertResponse)
}

void InsertResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

InsertResponse::~InsertResponse() {
  // @@protoc_insertion_point(destructor:lightkv.InsertResponse)
  SharedDtor();
}

void InsertResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void InsertResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertResponse::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertResponse& InsertResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_InsertResponse.base);
  return *internal_default_instance();
}


void InsertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool InsertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.InsertResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.InsertResponse.redirect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.InsertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.InsertResponse)
  return false;
#undef DO_
}

void InsertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.InsertResponse)
}

::google::protobuf::uint8* InsertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.InsertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.InsertResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.InsertResponse)
  return target;
}

size_t InsertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.InsertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string redirect = 2;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.InsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.InsertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.InsertResponse)
    MergeFrom(*source);
  }
}

void InsertResponse::MergeFrom(const InsertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.InsertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    mutable_error()->::lightkv::Error::MergeFrom(from.error());
  }
}

void InsertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.InsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertResponse::CopyFrom(const InsertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.InsertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertResponse::IsInitialized() const {
  return true;
}

void InsertResponse::Swap(InsertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertResponse::InternalSwap(InsertResponse* other) {
  using std::swap;
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertResponse::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectRequest::kTypeFieldNumber;
const int SelectRequest::kLkeyFieldNumber;
const int SelectRequest::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectRequest::SelectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_SelectRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.SelectRequest)
}
SelectRequest::SelectRequest(const SelectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lkey().size() > 0) {
    lkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lkey_);
  }
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rkey().size() > 0) {
    rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:lightkv.SelectRequest)
}

void SelectRequest::SharedCtor() {
  lkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

SelectRequest::~SelectRequest() {
  // @@protoc_insertion_point(destructor:lightkv.SelectRequest)
  SharedDtor();
}

void SelectRequest::SharedDtor() {
  lkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SelectRequest::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectRequest& SelectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_SelectRequest.base);
  return *internal_default_instance();
}


void SelectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.SelectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool SelectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.SelectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.SelectType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::lightkv::SelectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lkey().data(), static_cast<int>(this->lkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.SelectRequest.lkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rkey().data(), static_cast<int>(this->rkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.SelectRequest.rkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.SelectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.SelectRequest)
  return false;
#undef DO_
}

void SelectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.SelectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.SelectType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string lkey = 2;
  if (this->lkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lkey().data(), static_cast<int>(this->lkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectRequest.lkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lkey(), output);
  }

  // string rkey = 3;
  if (this->rkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rkey().data(), static_cast<int>(this->rkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectRequest.rkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.SelectRequest)
}

::google::protobuf::uint8* SelectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.SelectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.SelectType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string lkey = 2;
  if (this->lkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lkey().data(), static_cast<int>(this->lkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectRequest.lkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lkey(), target);
  }

  // string rkey = 3;
  if (this->rkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rkey().data(), static_cast<int>(this->rkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectRequest.rkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.SelectRequest)
  return target;
}

size_t SelectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.SelectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lkey = 2;
  if (this->lkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lkey());
  }

  // string rkey = 3;
  if (this->rkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rkey());
  }

  // .lightkv.SelectType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.SelectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.SelectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.SelectRequest)
    MergeFrom(*source);
  }
}

void SelectRequest::MergeFrom(const SelectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.SelectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lkey().size() > 0) {

    lkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lkey_);
  }
  if (from.rkey().size() > 0) {

    rkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rkey_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SelectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.SelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectRequest::CopyFrom(const SelectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.SelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectRequest::IsInitialized() const {
  return true;
}

void SelectRequest::Swap(SelectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectRequest::InternalSwap(SelectRequest* other) {
  using std::swap;
  lkey_.Swap(&other->lkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rkey_.Swap(&other->rkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SelectRequest::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectResponse::InitAsDefaultInstance() {
  ::lightkv::_SelectResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::lightkv::Error*>(
      ::lightkv::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectResponse::kErrorFieldNumber;
const int SelectResponse::kRedirectFieldNumber;
const int SelectResponse::kKeysFieldNumber;
const int SelectResponse::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectResponse::SelectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lightkv_2eproto::scc_info_SelectResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightkv.SelectResponse)
}
SelectResponse::SelectResponse(const SelectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redirect().size() > 0) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    error_ = new ::lightkv::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightkv.SelectResponse)
}

void SelectResponse::SharedCtor() {
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

SelectResponse::~SelectResponse() {
  // @@protoc_insertion_point(destructor:lightkv.SelectResponse)
  SharedDtor();
}

void SelectResponse::SharedDtor() {
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void SelectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SelectResponse::descriptor() {
  ::protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectResponse& SelectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lightkv_2eproto::scc_info_SelectResponse.base);
  return *internal_default_instance();
}


void SelectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lightkv.SelectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  values_.Clear();
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool SelectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightkv.SelectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightkv.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.SelectResponse.redirect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.SelectResponse.keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightkv.SelectResponse.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightkv.SelectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightkv.SelectResponse)
  return false;
#undef DO_
}

void SelectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightkv.SelectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect(), output);
  }

  // repeated string keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->keys(i), output);
  }

  // repeated string values = 4;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightkv.SelectResponse)
}

::google::protobuf::uint8* SelectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightkv.SelectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect(), target);
  }

  // repeated string keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->keys(i), target);
  }

  // repeated string values = 4;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightkv.SelectResponse.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightkv.SelectResponse)
  return target;
}

size_t SelectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightkv.SelectResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  // repeated string values = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // string redirect = 2;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  // .lightkv.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightkv.SelectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightkv.SelectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightkv.SelectResponse)
    MergeFrom(*source);
  }
}

void SelectResponse::MergeFrom(const SelectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightkv.SelectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  values_.MergeFrom(from.values_);
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.has_error()) {
    mutable_error()->::lightkv::Error::MergeFrom(from.error());
  }
}

void SelectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightkv.SelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectResponse::CopyFrom(const SelectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightkv.SelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectResponse::IsInitialized() const {
  return true;
}

void SelectResponse::Swap(SelectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectResponse::InternalSwap(SelectResponse* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  values_.InternalSwap(CastToBase(&other->values_));
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SelectResponse::GetMetadata() const {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lightkv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StorageService::~StorageService() {}

const ::google::protobuf::ServiceDescriptor* StorageService::descriptor() {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightkv_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* StorageService::GetDescriptor() {
  return descriptor();
}

void StorageService::operate(::google::protobuf::RpcController* controller,
                         const ::lightkv::LightKVRequest*,
                         ::lightkv::LightKVResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method operate() not implemented.");
  done->Run();
}

void StorageService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_lightkv_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      operate(controller,
             ::google::protobuf::down_cast<const ::lightkv::LightKVRequest*>(request),
             ::google::protobuf::down_cast< ::lightkv::LightKVResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& StorageService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::lightkv::LightKVRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& StorageService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::lightkv::LightKVResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

StorageService_Stub::StorageService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
StorageService_Stub::StorageService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
StorageService_Stub::~StorageService_Stub() {
  if (owns_channel_) delete channel_;
}

void StorageService_Stub::operate(::google::protobuf::RpcController* controller,
                              const ::lightkv::LightKVRequest* request,
                              ::lightkv::LightKVResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

ProxyService::~ProxyService() {}

const ::google::protobuf::ServiceDescriptor* ProxyService::descriptor() {
  protobuf_lightkv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightkv_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* ProxyService::GetDescriptor() {
  return descriptor();
}

void ProxyService::insert(::google::protobuf::RpcController* controller,
                         const ::lightkv::InsertRequest*,
                         ::lightkv::InsertResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method insert() not implemented.");
  done->Run();
}

void ProxyService::select(::google::protobuf::RpcController* controller,
                         const ::lightkv::SelectRequest*,
                         ::lightkv::SelectResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method select() not implemented.");
  done->Run();
}

void ProxyService::delete_(::google::protobuf::RpcController* controller,
                         const ::lightkv::DeleteRequest*,
                         ::lightkv::DeleteResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delete_() not implemented.");
  done->Run();
}

void ProxyService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_lightkv_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      insert(controller,
             ::google::protobuf::down_cast<const ::lightkv::InsertRequest*>(request),
             ::google::protobuf::down_cast< ::lightkv::InsertResponse*>(response),
             done);
      break;
    case 1:
      select(controller,
             ::google::protobuf::down_cast<const ::lightkv::SelectRequest*>(request),
             ::google::protobuf::down_cast< ::lightkv::SelectResponse*>(response),
             done);
      break;
    case 2:
      delete_(controller,
             ::google::protobuf::down_cast<const ::lightkv::DeleteRequest*>(request),
             ::google::protobuf::down_cast< ::lightkv::DeleteResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ProxyService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::lightkv::InsertRequest::default_instance();
    case 1:
      return ::lightkv::SelectRequest::default_instance();
    case 2:
      return ::lightkv::DeleteRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ProxyService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::lightkv::InsertResponse::default_instance();
    case 1:
      return ::lightkv::SelectResponse::default_instance();
    case 2:
      return ::lightkv::DeleteResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ProxyService_Stub::ProxyService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ProxyService_Stub::ProxyService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ProxyService_Stub::~ProxyService_Stub() {
  if (owns_channel_) delete channel_;
}

void ProxyService_Stub::insert(::google::protobuf::RpcController* controller,
                              const ::lightkv::InsertRequest* request,
                              ::lightkv::InsertResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ProxyService_Stub::select(::google::protobuf::RpcController* controller,
                              const ::lightkv::SelectRequest* request,
                              ::lightkv::SelectResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ProxyService_Stub::delete_(::google::protobuf::RpcController* controller,
                              const ::lightkv::DeleteRequest* request,
                              ::lightkv::DeleteResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lightkv
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::Error* Arena::CreateMaybeMessage< ::lightkv::Error >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::LightKVRequest* Arena::CreateMaybeMessage< ::lightkv::LightKVRequest >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::LightKVRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::LightKVResponse* Arena::CreateMaybeMessage< ::lightkv::LightKVResponse >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::LightKVResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::DeleteRequest* Arena::CreateMaybeMessage< ::lightkv::DeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::DeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::DeleteResponse* Arena::CreateMaybeMessage< ::lightkv::DeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::DeleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::InsertRequest* Arena::CreateMaybeMessage< ::lightkv::InsertRequest >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::InsertRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::InsertResponse* Arena::CreateMaybeMessage< ::lightkv::InsertResponse >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::InsertResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::SelectRequest* Arena::CreateMaybeMessage< ::lightkv::SelectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::SelectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lightkv::SelectResponse* Arena::CreateMaybeMessage< ::lightkv::SelectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::lightkv::SelectResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
