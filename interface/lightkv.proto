syntax="proto3";
package lightkv;
option cc_generic_services = true;

service StorageService {
    rpc init_store(InitStoreRequest) returns(InitStoreResponse);
    rpc operate(LightKVRequest) returns (LightKVResponse);
}

service ProxyService {
    rpc insert(InsertRequest) returns (InsertResponse);
    rpc select(SelectRequest) returns (SelectResponse);
    rpc delete_(DeleteRequest) returns (DeleteResponse);
    rpc heart_beat(HeartBeatRequest) returns (HeaerBeatResponse);
};

enum OperatorType {
    SELECT = 0;
    INSERT = 1;
    DELETE = 2;
}

enum SelectType {
    SINGLE = 0;
    PREFIX = 1;
    RANGE = 2;
}

message Error {
    int32 error_code = 1;
    string error_message = 2;
};

message EndPoint {
    string ip = 1;
    int32 port = 2;
}

message LightKVRequest {
    OperatorType operator_type = 1;
    SelectType select_type = 2;
    string lkey = 3;
    string rkey = 4;
    string value = 5;
};

message LightKVResponse {
    Error error = 1;
    string redirect = 2;
    repeated string keys = 3;
    repeated string values = 4;
};

message DeleteRequest {
    string key = 1;
};

message DeleteResponse {
    Error error = 1;
    string redirect = 2;
};

message InsertRequest {
    string key = 1;
    string value = 2;
};

message InsertResponse {
    Error error = 1;
    string redirect = 2;
};

message SelectRequest {
    SelectType type = 1;
    string lkey = 2;
    string rkey = 3;
};

message SelectResponse {
    Error error = 1;
    string redirect = 2;
    repeated string keys = 3;
    repeated string values = 4;
};

message InitStoreRequest {
    int32 shardId = 1;
    repeated EndPoint n = 2;
}

message InitStoreResponse {
    Error error = 1;
}

message DeleteStoreRequest {
    
}

message DeleteStoreResponse {

}

message HeartBeatRequest {
    EndPoint address = 1;
    repeated int32 store_shards = 2; 
    repeated int32 leader_shards = 3;
}

message HeaerBeatResponse {}