syntax="proto3";
package lightkv;
option cc_generic_services = true;

service StorageService {
    rpc init_store(InitStoreRequest) returns(InitStoreResponse);
    rpc delete_store(DeleteStoreRequest) returns(DeleteStoreResponse);
    rpc operate(LightKVRequest) returns(LightKVResponse);
}

service ProxyService {
    rpc insert(InsertRequest) returns(InsertResponse);
    rpc select(SelectRequest) returns(SelectResponse);
    rpc delete_(DeleteRequest) returns(DeleteResponse);
    rpc heart_beat(HeartBeatRequest) returns(HeartBeatResponse);
    rpc get_shards_state(ShardsStateRequest) returns(ShardsStateResponse);
};

message ShardsStateRequest {}

message ShardState {
    int32 shard_id = 1;
    EndPoint leader = 2;
    repeated EndPoint followers = 3;
}

message ShardsStateResponse {
    repeated ShardState shards_state = 1;
}

enum OperatorType {
    SELECT = 0;
    INSERT = 1;
    DELETE = 2;
}

message Error {
    int32 error_code = 1;
    string error_message = 2;
};

message EndPoint {
    string ip = 1;
    int32 port = 2;
}

message LightKVRequest {
    int32 shard_id = 1;
    OperatorType operator_type = 2;
    string key = 3;
    string value = 4;
};

message LightKVResponse {
    Error error = 1;
    string redirect = 2;
    string value = 3;
};

message DeleteRequest {
    string key = 1;
};

message DeleteResponse {
    Error error = 1;
    string redirect = 2;
};

message InsertRequest {
    string key = 1;
    string value = 2;
};

message InsertResponse {
    Error error = 1;
    string redirect = 2;
};

message SelectRequest {
    string key = 1;
};

message SelectResponse {
    Error error = 1;
    string redirect = 2;
    string value = 3;
};

message InitStoreRequest {
    int32 shard_id = 1;
    repeated EndPoint peers = 2;
}

message InitStoreResponse {
    Error error = 1;
}

message DeleteStoreRequest {
    int32 shard_id = 1;
}

message DeleteStoreResponse {}

message HeartBeatRequest {
    EndPoint address = 1;
    repeated int32 store_shards = 2; 
    repeated int32 leader_shards = 3;
}

message HeartBeatResponse {}